# -*- coding: utf-8 -*-
"""AiLab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pBKHiTnRcrNz923EEByc2hlRmybOFtMO

Lab Tasks
"""

# 1) The Fibonacci sequence is a sequence of numbers where the number is the sum of two previous numbers. Write the Fibonacci sequence through recursion of 10.

def fibonacci(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)

for i in range(10):
    print(fibonacci(i), end=' ', flush=True)

# 2) lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]. Given the nested list, extract the word “hello”

lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]
result = lst[3][1][2][0]
print(result)

# 3) d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}. Given the nested dictionary, extract the word hello

d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}
result = d['k1'][3]['tricky'][3]['target'][3]
print(result)

# 4) You are in a hurry and the traffic officer stops you. Write a function to return one of 3
# possible results: "No fine", "Less Fine", or "Car seize". If your speed is 70 or less, the result
# is "No fine". If speed is between 71 and 80 inclusive, the result is "Less Fine". If speed is
# 81 or more, the result is "Car seize". Unless it is your anniversary (encoded as a Boolean
# value in the parameters of the function) -- on your anniversary, your speed can be 10 higher
# in all cases

def traffic_fine(speed: int, anniversary: bool):
    if anniversary:
        speed -= 10
    if speed <= 70:
        return "No fine"
    elif 71 <= speed <= 80:
        return "Less Fine"
    else:
        return "Car seize"


print(traffic_fine(89, True))
print(traffic_fine(100, False))
print(traffic_fine(90, True))

# 5) Determine whether your data contains any duplicate element in a given array of integers.
#  Return true if any value appears twice in the array and return false if every element is
#  distinct. Also, remove the duplicates.

def contain_duplicates(arr):
    unique_set = set()
    for i in arr:
        if i in unique_set:
            return True
        else:
            unique_set.add(i)
    return False

def remove_duplicates(arr):
    unique_set = set()
    unique_list = []
    for i in arr:
        if i not in unique_set:
            unique_list.append(i)
            unique_set.add(i)
    return unique_list

arr = [1,2,3,4,5,5,6,7,8,9,9]
print(contain_duplicates(arr))

arr = [1,2,3,4,5,5,6,7,8,9,9]
print(remove_duplicates(arr))

# 7) A user enters any string containing letters and digits both. Calculate the number of letters and digits entered by a user.

def count_letters_digits(string: str):
    letter_count = 0
    digit_count = 0
    for char in string:
        if char.isalpha():
            letter_count += 1
        elif char.isdigit():
            digit_count += 1
    return letter_count, digit_count

print(count_letters_digits("abc123abc123"))

# 6 Write a Python program to read a given CSV file as a list.

import csv

def read_csv(filepath: str):
    with open(filepath, mode='r') as file:
        # read the CSV file
        csvFile = csv.DictReader(file)
        # return the data as a list of dictionaries
        return list(csvFile)

read_csv("D:\FAST-NUCES\read.csv");

"""Examples"""

a = 12
b = 2
C = 5
d = -3
print("Addition:", a+b)
print("Subtraction:",a-b)
print("Multiplication:", a*b)
print("Division", a/b)
print("Power", a**b)
print("Modulus/Remainder:", a%C)
print("Absolute:", abs(d))

import numpy as np #Mathematical constants
print(np.pi)
print(np.e)
#Trignometric Functions
angle = np.pi/4
print(np.sin(angle))
print(np.cos(angle))
print(np.tan(angle))

name = input("Enter Employee Name: ") 
salary = input("Enter salary: ")
company = input("Enter Company name: ")
# Display all values on screen
print("\n")
print("Printing Employee Details")
print("Name", "Salary", "Company")
print(name, salary, company)

data = []
print("Tell me about yourself")
while True:
    line = input()
    if line:
        data.append(line)
    else:
        break
        
finalText = '\n'.join(data)
print("\n")
print("Final text input")
print(finalText)

var1 = 'Hello World!'
var2 = "Python Programming"
print("var1[0]: ", var1[0])
print("var2[1:5]: ", var2[1:5])
print("Complete: ", var1)

list1 = ['physics', 'chemistry', 1997, 2000];
list2 = [1, 2, 3, 4, 5, 6, 7];
print("list1 [0]: ", list1[0]) 
print("list2[1:5]: ", list2[1:5]) 
print(list1)

def printme(str):
    "This prints a passed string into this function"
    print (str)
    return;
# Now you can call printme function
printme("I'm first call to user defined function!")
printme("Again second call to the same function")

def changeme( mylist):
    "This changes a passed list into this function"
    mylist.append([1,2,3,4]);
    print("Values inside the function: ", mylist)
    return
# Now you can call changeme function 
mylist = [10,20,30]
print("old Values outside the function: ", mylist) 
changeme(mylist)
print("new Values outside the function: ", mylist)

a = 12
b = -4
c = 3+4j
d = 7.90
print(abs(a))
print(abs(b))
print(abs(c))
print(abs(d))

stringobj = 'PALINDROME'
print(len(stringobj))
tupleobj = ('a', 'e', 'i', 'o', 'u')
print(len(tupleobj))
listobj = ['1', '2', '3', 'o', '10u']
print(len(listobj))

tup1 = ('physics', 'chemistry', 1997, 2000)
tup2 = (1, 2, 3, 4, 5, 6, 7)
print("tup1 [0]: ", tup1[0])
print("tup2 [1:5]: ", tup2 [1:5]) 
print(tup1)

tup1 = (12, 34.56)
tup2 = ('abc', 'xyz')
#Following action is not valid for tuples
tup1 [0] = 100;
tup3 = tup1 + tup2
print(tup3)

dict1 = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}
dict1['Age'] = 8; # update existing entry 
dict1['School'] = "DPS School";
print ("dict1['Age']: ", dict1['Age']) 
print ("dict1['School']: ", dict1['School'])

dict1 = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}
         
print("dict1['Name']: ", dict1 ['Name']) 
print("dict1['Age']: ", dict1 ['Age'])

count = 0
while count < 5:
    print (count, "is less than 5")
    count = count + 1
else:
    print (count, "is not less than 5")

for letter in 'Python':
    # First Example
    print('Current Letter:', letter)
    
fruits = ['banana', 'apple', 'mango']

for fruit in fruits:
# Second Example
    print ('Current fruit', fruit)
print ("Good bye!")

var1 = 100
if var1:
    print("1 - Got a true expression value") 
    print(var1)
var2 = 0
if var2:
    print("2 - Got a true expression value")
    print(var2)
print ("Good bye!")

var1 = 100
if var1:
    print("1 - Got a true expression value") 
    print(var1)
else:
    print("1 - Got a false expression value")
    print(var1)

var2 = 0

if var2:
    print("2 - Got a true expression value")
    print(var2)
else:
    print("2 - Got a false expression value")
    print(var2)

print("Good bye!")

def is_prime(number):
    if number == 1:
        return False
    for factor in range(2, number): 
        if number % factor ==0: 
            return False
    return True

def print_primes(n):
    for number in range(1,n): 
        if is_prime(number):
            print("%d is prime" % number)
            
print_primes(10)

def factorial(x):
    if x ==1:
        return 1
    else:
        n = 10
    return (x * factorial(x-1))
n = 10
print("The factorial of", n, "is", factorial(n))

import csv
import pandas

# write a csv file
# field names
fields = ['Name', 'campus', 'Year', 'CGPA']
# data rows of csv file
rows = [ ['John','KHI', '2', '3.0'], ['Bret', 'KHI','2', '2.1'], ['Tom', "KHI", '2', '3.8'] ]
# name of csv file
filename = "university_records.csv"
#writing to csv file
with open(filename, 'w') as csvfile: # creating a csv writer object 
    csvwriter = csv.writer(csvfile)
    # writing the fields 
    csvwriter.writerow(fields)
    # writing the data rows 
    csvwriter.writerows(rows)

df = pandas.read_csv(filename)
print(df)

